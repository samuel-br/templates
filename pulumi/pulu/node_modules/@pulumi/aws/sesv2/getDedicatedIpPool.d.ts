import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.sesv2.getDedicatedIpPool({
 *     poolName: "my-pool",
 * }));
 * ```
 */
export declare function getDedicatedIpPool(args: GetDedicatedIpPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetDedicatedIpPoolResult>;
/**
 * A collection of arguments for invoking getDedicatedIpPool.
 */
export interface GetDedicatedIpPoolArgs {
    /**
     * Name of the dedicated IP pool.
     */
    poolName: string;
    /**
     * A map of tags attached to the pool.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getDedicatedIpPool.
 */
export interface GetDedicatedIpPoolResult {
    /**
     * ARN of the Dedicated IP Pool.
     */
    readonly arn: string;
    /**
     * A list of objects describing the pool's dedicated IP's. See `dedicatedIps`.
     */
    readonly dedicatedIps: outputs.sesv2.GetDedicatedIpPoolDedicatedIp[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly poolName: string;
    /**
     * A map of tags attached to the pool.
     */
    readonly tags: {
        [key: string]: string;
    };
}
export declare function getDedicatedIpPoolOutput(args: GetDedicatedIpPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDedicatedIpPoolResult>;
/**
 * A collection of arguments for invoking getDedicatedIpPool.
 */
export interface GetDedicatedIpPoolOutputArgs {
    /**
     * Name of the dedicated IP pool.
     */
    poolName: pulumi.Input<string>;
    /**
     * A map of tags attached to the pool.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
